
(define kernel-table
  (make-primitive-table
   make-hasheq-placeholder
   vector?
   hash
   sub1
   eval-jit-enabled
   hash-set
   prefab-key->struct-type
   wrap-evt
   arity-at-least?
   arithmetic-shift
   current-load-relative-directory
   string?
   peek-char-or-special
   string<?
   sync
   exact-positive-integer?
   fxvector-set!
   peek-byte
   make-immutable-hasheq
   directory-exists?
   bytes=?
   write
   make-fxvector
   make-flvector
   make-hash
   equal-hash-code
   read-accept-bar-quote
   byte-regexp?
   struct-type?
   not
   string->unreadable-symbol
   regexp-replace
   char-numeric?
   filesystem-change-evt
   char>=?
   default-continuation-prompt-tag
   make-weak-hasheq
   datum-intern-literal
   string-locale-downcase
   flvector-length
   weak-box-value
   path-for-some-system?
   byte-pregexp?
   char<?
   current-load-extension
   bitwise-ior
   hash-iterate-next
   simplify-path
   hash-copy
   string->number
   bytes?
   arity-at-least-value
   exn-continuation-marks
   bytes->string/locale
   values
   reverse
   eof
   eq?
   symbol?
   find-system-path
   error
   string-set!
   current-input-port
   hasheqv
   make-vector
   bytes<?
   bytes-append
   negative?
   hash-remove
   expand-user-path
   box?
   error-print-source-location
   list->vector
   always-evt
   list-ref
   hash-ref
   thread-wait
   regexp-match-positions
   object-name
   path-element->bytes
   split-path
   procedure-arity-includes?
   immutable?
   regexp?
   vector-set!
   make-immutable-hasheqv
   current-eval
   string->bytes/latin-1
   subbytes
   bytes-ref
   fxvector-length
   make-semaphore
   inspector-superior?
   version
   string-ref
   symbol<?
   void
   string-ci<?
   semaphore-peek-evt
   exact?
   exact-nonnegative-integer?
   andmap
   string->symbol
   read-char-or-special
   eq-hash-code
   string-ci>=?
   hash-iterate-key+value
   regexp-replace*
   make-struct-type
   vector-ref
   write-string
   make-ephemeron
   abs
   current-environment-variables
   call-with-semaphore
   bytes->path
   pregexp
   flvector?
   equal?
   placeholder-set!
   make-weak-hash
   modulo
   string->uninterned-symbol
   call-with-values
   set-box!
   open-input-bytes
   prop:equal+hash
   make-hasheq
   prefab-struct-key
   byte-pregexp
   make-hasheqv
   peek-bytes
   use-compiled-file-paths
   path->complete-path
   log-level?
   filesystem-change-evt-cancel
   cleanse-path
   <=
   char->integer
   list-tail
   path?
   exact-integer?
   path->bytes
   abort-current-continuation
   format
   for-each
   box-immutable
   flvector-set!
   string->bytes/locale
   eof-object?
   read-bytes
   make-continuation-prompt-tag
   current-continuation-marks
   path->string
   read-on-demand-source
   use-collection-link-paths
   break-enabled-key
   bytes-length
   make-prefab-struct
   boolean?
   vector
   real?
   resolve-path
   parameterization-key
   vector->immutable-vector
   system-type
   string>?
   string=?
   regexp
   complete-path?
   input-port?
   open-input-file
   eqv?
   make-inspector
   vector-immutable
   build-path
   cache-configuration
   current-library-collection-links
   ceiling
   relative-path?
   hash?
   raise
   ephemeron-value
   make-weak-box
   make-parameter
   symbol->string
   make-hash-placeholder
   read-case-sensitive
   current-library-collection-paths
   continuation-prompt-available?
   exn-message
   hash-eqv?
   display
   thread-send
   environment-variables-ref
   read-char
   make-struct-field-mutator
   exn?
   byte-regexp
   string<=?
   hash-remove!
   file-exists?
   string-foldcase
   char-alphabetic?
   expt
   hash-for-each
   current-load/use-compiled
   hash-count
   fprintf
   bytes->path-element
   continuation-mark-set-first
   call-with-escape-continuation
   current-read-interaction
   char-whitespace?
   call-with-continuation-prompt
   string-ci<=?
   char>?
   make-placeholder
   current-print
   char<=?
   integer->integer-bytes
   hash-eq?
   box-cas!
   hash-clear!
   add1
   regexp-match?
   directory-list
   vector-length
   make-hasheqv-placeholder
   check-for-break
   string->path
   string-append
   make-string
   hash-keys-subset?
   unbox
   vector-copy!
   current-compile
   char=?
   apply
   close-input-port
   fxvector?
   fixnum?
   current-inspector
   string-length
   semaphore-post
   current-logger
   string-copy!
   list*
   hash-iterate-first
   list?
   prop:custom-write
   append
   list->string
   system-library-subpath
   substring
   sync/timeout
   dynamic-wind
   primitive-table
   integer->char
   make-immutable-hash
   file-position
   -
   list
   pregexp?
   hash-map
   current-directory
   <
   current-compiled-file-roots
   log-message
   call-with-continuation-barrier
   ormap
   vector->list
   caadr
   length
   make-reader-graph
   prop:procedure
   =
   *
   void?
   extend-parameterization
   use-user-specific-search-paths
   char?
   read-byte
   null?
   positive?
   string-ci>?
   /
   >
   make-thread-cell
   +
   prefab-key?
   port-next-location
   box
   current-load
   absolute-path?
   hash-iterate-key
   prop:evt
   make-struct-type-property
   path-convention-type
   hash-set!
   null
   file-or-directory-modify-seconds
   symbol-interned?
   number->string
   make-bytes
   zero?
   current-code-inspector
   byte?
   load-on-demand-enabled
   string>=?
   bytes->string/utf-8
   port-count-lines!
   hash-iterate-value
   port-read-handler
   string->bytes/utf-8
   struct->vector
   >=
   inspector?
   with-input-from-file
   integer?
   exception-handler-key
   flonum?
   procedure-arity
   gensym
   map
   system-path-convention-type
   number?
   reparameterize
   string
   procedure?
   make-struct-field-accessor
   prop:method-arity-error
   regexp-match
   hasheq
   bytes
   current-thread
   read-decimal-as-inexact
   max
   struct?
   
   keyword<?
   string->keyword
   keyword->string
   keyword?

   cons pair?
   car cdr
   caar cadr cdar cddr
   caaar caadr cadar caddr cdaar cdadr cddar cdddr
   caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr
   cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr

   mpair?
   mcons
   mcar
   mcdr
   set-mcar!
   set-mcdr!

   raise-argument-error
   raise-arguments-error
   raise-result-error
   raise-mismatch-error
   raise-range-error

   struct:exn exn exn? exn-message exn-continuation-marks
   struct:exn:break exn:break exn:break? exn:break-continuation
   struct:exn:fail exn:fail exn:fail?
   struct:exn:fail:contract exn:fail:contract exn:fail:contract?
   struct:exn:fail:contract:variable exn:fail:contract:variable exn:fail:contract:variable?
   struct:exn:fail:filesystem exn:fail:filesystem exn:fail:filesystem?
   struct:exn:fail:read exn:fail:read exn:fail:read? exn:fail:read-srclocs
   struct:exn:fail:read:eof exn:fail:read:eof exn:fail:read:eof?
   struct:exn:fail:read:non-char exn:fail:read:non-char exn:fail:read:non-char?

   prop:exn:srclocs exn:srclocs? exn:srclocs-accessor

   struct:srcloc srcloc srcloc?
   srcloc-source srcloc-line srcloc-column srcloc-position srcloc-span
   srcloc->string

   [host:datum->syntax datum->syntax]
   [host:syntax->datum syntax->datum]
   syntax-property-symbol-keys
   syntax-property syntax-span syntax-position syntax-column
   syntax-line syntax-source syntax-e syntax?))
