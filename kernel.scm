
(define-syntax make-primitive-table
  (syntax-rules ()
    [(_ prim ...)
     (let ([ht (make-eq-hashtable)])
       (hashtable-set! ht 'prim prim)
       ...)]))

(define kernel-table
  (make-primitive-table
   make-hasheq-placeholder
   vector?
   srcloc-span
   hash
   sub1
   eval-jit-enabled
   hash-set
   prefab-key->struct-type
   unsafe-vector-ref
   wrap-evt
   arity-at-least?
   arithmetic-shift
   keyword<?
   current-load-relative-directory
   unsafe-fxvector-ref
   string?
   caddar
   cadddr
   unsafe-vector*-set!
   peek-char-or-special
   string<?
   sync
   exact-positive-integer?
   fxvector-set!
   peek-byte
   make-immutable-hasheq
   directory-exists?
   bytes=?
   srcloc-line
   write
   make-fxvector
   make-flvector
   make-hash
   equal-hash-code
   read-accept-bar-quote
   cadadr
   byte-regexp?
   struct-type?
   not
   string->unreadable-symbol
   regexp-replace
   char-numeric?
   filesystem-change-evt
   char>=?
   unsafe-fx<
   default-continuation-prompt-tag
   make-weak-hasheq
   unsafe-vector-set!
   mcar
   datum-intern-literal
   string-locale-downcase
   flvector-length
   weak-box-value
   path-for-some-system?
   byte-pregexp?
   char<?
   current-load-extension
   srcloc?
   unsafe-fx-
   bitwise-ior
   hash-iterate-next
   simplify-path
   raise-argument-error
   hash-copy
   string->number
   bytes?
   arity-at-least-value
   exn-continuation-marks
   unsafe-bytes-length
   bytes->string/locale
   unsafe-fx>=
   values
   reverse
   eof
   eq?
   symbol?
   find-system-path
   error
   string-set!
   current-input-port
   hasheqv
   make-vector
   bytes<?
   bytes-append
   unsafe-fxvector-set!
   negative?
   hash-remove
   expand-user-path
   box?
   error-print-source-location
   list->vector
   always-evt
   unsafe-fx<=
   unsafe-fx=
   list-ref
   hash-ref
   thread-wait
   regexp-match-positions
   object-name
   path-element->bytes
   split-path
   procedure-arity-includes?
   immutable?
   regexp?
   vector-set!
   raise-range-error
   make-immutable-hasheqv
   current-eval
   string->bytes/latin-1
   raise-result-error
   subbytes
   bytes-ref
   fxvector-length
   make-semaphore
   inspector-superior?
   string->keyword
   version
   string-ref
   raise-mismatch-error
   symbol<?
   void
   cdddr
   caar
   string-ci<?
   semaphore-peek-evt
   exact?
   exact-nonnegative-integer?
   unsafe-flvector-set!
   andmap
   string->symbol
   read-char-or-special
   unsafe-vector*-ref
   eq-hash-code
   string-ci>=?
   hash-iterate-key+value
   regexp-replace*
   struct:exn:fail:filesystem
   make-struct-type
   vector-ref
   srcloc-column
   write-string
   make-ephemeron
   abs
   current-environment-variables
   call-with-semaphore
   bytes->path
   pregexp
   flvector?
   equal?
   placeholder-set!
   make-weak-hash
   modulo
   srcloc-position
   string->uninterned-symbol
   srcloc->string
   call-with-values
   set-box!
   car
   unsafe-immutable-hash-iterate-key+value
   open-input-bytes
   prop:equal+hash
   make-hasheq
   prefab-struct-key
   byte-pregexp
   make-hasheqv
   peek-bytes
   unsafe-fl>=
   use-compiled-file-paths
   path->complete-path
   exn:fail:filesystem?
   log-level?
   filesystem-change-evt-cancel
   cleanse-path
   <=
   cddr
   char->integer
   list-tail
   path?
   cdar
   exact-integer?
   path->bytes
   abort-current-continuation
   format
   unsafe-car
   mpair?
   for-each
   box-immutable
   flvector-set!
   string->bytes/locale
   eof-object?
   unsafe-cdr
   read-bytes
   make-continuation-prompt-tag
   current-continuation-marks
   path->string
   read-on-demand-source
   use-collection-link-paths
   break-enabled-key
   bytes-length
   exn:fail:read
   cons
   make-prefab-struct
   boolean?
   vector
   real?
   resolve-path
   exn:fail:contract:variable
   unsafe-fxrshift
   parameterization-key
   vector->immutable-vector
   system-type
   string>?
   string=?
   regexp
   complete-path?
   input-port?
   open-input-file
   eqv?
   make-inspector
   caddr
   vector-immutable
   build-path
   cache-configuration
   current-library-collection-links
   ceiling
   relative-path?
   hash?
   raise
   ephemeron-value
   pair?
   keyword?
   make-weak-box
   exn:fail:contract
   make-parameter
   symbol->string
   make-hash-placeholder
   read-case-sensitive
   current-library-collection-paths
   continuation-prompt-available?
   exn-message
   hash-eqv?
   display
   thread-send
   environment-variables-ref
   read-char
   make-struct-field-mutator
   exn?
   cadar
   byte-regexp
   string<=?
   hash-remove!
   file-exists?
   string-foldcase
   char-alphabetic?
   expt
   hash-for-each
   current-load/use-compiled
   hash-count
   fprintf
   bytes->path-element
   continuation-mark-set-first
   unsafe-fl<
   call-with-escape-continuation
   current-read-interaction
   char-whitespace?
   call-with-continuation-prompt
   string-ci<=?
   char>?
   make-placeholder
   current-print
   srcloc
   char<=?
   integer->integer-bytes
   hash-eq?
   box-cas!
   hash-clear!
   mcdr
   add1
   regexp-match?
   directory-list
   vector-length
   srcloc-source
   make-hasheqv-placeholder
   check-for-break
   string->path
   string-append
   make-string
   unsafe-fx>
   unsafe-fx+
   hash-keys-subset?
   unsafe-fl>
   unbox
   vector-copy!
   current-compile
   char=?
   apply
   close-input-port
   fxvector?
   unsafe-flvector-ref
   fixnum?
   current-inspector
   string-length
   cadr
   semaphore-post
   current-logger
   string-copy!
   exn:fail?
   list*
   hash-iterate-first
   unsafe-immutable-hash-iterate-first
   list?
   prop:custom-write
   append
   cdr
   struct:exn:fail
   list->string
   system-library-subpath
   substring
   sync/timeout
   dynamic-wind
   primitive-table
   integer->char
   make-immutable-hash
   file-position
   -
   list
   pregexp?
   raise-arguments-error
   hash-map
   current-directory
   unsafe-bytes-ref
   <
   current-compiled-file-roots
   log-message
   call-with-continuation-barrier
   ormap
   vector->list
   caadr
   length
   make-reader-graph
   unsafe-struct-set!
   prop:procedure
   unsafe-immutable-hash-iterate-next
   =
   *
   void?
   extend-parameterization
   use-user-specific-search-paths
   char?
   read-byte
   null?
   positive?
   string-ci>?
   /
   >
   make-thread-cell
   +
   prefab-key?
   unsafe-immutable-hash-iterate-key
   port-next-location
   box
   current-load
   absolute-path?
   hash-iterate-key
   prop:evt
   make-struct-type-property
   path-convention-type
   hash-set!
   null
   file-or-directory-modify-seconds
   symbol-interned?
   number->string
   make-bytes
   zero?
   current-code-inspector
   unsafe-string-length
   unsafe-vector-length
   byte?
   load-on-demand-enabled
   string>=?
   bytes->string/utf-8
   port-count-lines!
   exn:fail:read:non-char
   unsafe-vector*-length
   hash-iterate-value
   prop:exn:srclocs
   port-read-handler
   string->bytes/utf-8
   struct->vector
   exn:fail:read:eof
   >=
   inspector?
   with-input-from-file
   integer?
   exception-handler-key
   flonum?
   procedure-arity
   unsafe-fl<=
   gensym
   map
   system-path-convention-type
   number?
   reparameterize
   string
   procedure?
   make-struct-field-accessor
   prop:method-arity-error
   regexp-match
   hasheq
   bytes
   current-thread
   unsafe-struct-ref
   read-decimal-as-inexact
   max))
